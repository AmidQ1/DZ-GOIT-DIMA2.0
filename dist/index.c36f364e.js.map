{"mappings":"AAAA,MAAM,UAAU;AAChB,MAAM,WAAW;AAEjB,MAAM,SAAS,SAAS,cAAc,CAAC;AACvC,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,IAAI,cAAc;AAClB,IAAI,QAAQ;AACZ,IAAI,YAAY;AAEhB,OAAO,gBAAgB,CAAC,UAAU,OAAO;IACvC,EAAE,cAAc;IAChB,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI;IACjC,cAAc;IACd,QAAQ,SAAS,GAAG;IACpB,MAAM,KAAK,OAAO;AACpB;AAEA,WAAW,gBAAgB,CAAC,SAAS;IACnC,eAAe;IACf,MAAM,KAAK,OAAO;AACpB;AAEA,eAAe,KAAK,KAAK,EAAE,IAAI;IAC7B,IAAI,WAAW;IACf,YAAY;IAEZ,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,GAAG,SAAS,2CAA2C,EAAE,MAAM,MAAM,EAAE,KAAK,iBAAiB,EAAE,SAAS;QAE1G,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,MAAM,SAAS,KAAK,IAAI;QACxB,aAAa;QACb;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;IAChB,SAAU;QACR,YAAY;IACd;AACF;AAEA,SAAS,aAAa,MAAM;IAC1B,MAAM,SAAS,OACZ,GAAG,CACF,CAAC,EAAE,YAAY,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAK,CAAC;;kBAE7D,EAAE,aAAa,qBAAqB,EAAE,cAAc;;sEAEA,EAAE,MAAM;wEACN,EAAE,MAAM;qEACX,EAAE,SAAS;4EACJ,EAAE,UAAU;;WAE7E,CAAC,EAEP,IAAI,CAAC;IACR,QAAQ,kBAAkB,CAAC,aAAa;AAC1C;AAEA,SAAS;IACP,MAAM,YAAY,QAAQ,gBAAgB;IAC1C,UAAU,cAAc,CAAC;QACvB,UAAU;QACV,OAAO;IACT;AACF","sources":["index.js"],"sourcesContent":["const API_KEY = '47434367-ced2ef229dfccd49a84088601';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nconst search = document.getElementById('search');\r\nconst gallery = document.querySelector('.gallery');\r\nconst loadButton = document.getElementById('load');\r\n\r\nlet currentPage = 1;\r\nlet query = '';\r\nlet isLoading = false;\r\n\r\nsearch.addEventListener('submit', async (e) => {\r\n  e.preventDefault();\r\n  query = e.target.query.value.trim();\r\n  currentPage = 1;\r\n  gallery.innerHTML = '';\r\n  await imag(query, currentPage);\r\n});\r\n\r\nloadButton.addEventListener('click', async () => {\r\n  currentPage += 1;\r\n  await imag(query, currentPage);\r\n});\r\n\r\nasync function imag(query, page) {\r\n  if (isLoading) return;\r\n  isLoading = true;\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    const images = data.hits;\r\n    renderImages(images);\r\n    scrollToNewImages();\r\n  } catch (error) {\r\n    console.error(error);\r\n  } finally {\r\n    isLoading = false;\r\n  }\r\n}\r\n\r\nfunction renderImages(images) {\r\n  const markup = images\r\n    .map(\r\n      ({ webformatURL, largeImageURL, likes, views, comments, downloads }) => `\r\n      <li class=\"photo-card\">\r\n        <img src=\"${webformatURL}\" alt=\"\" data-large=\"${largeImageURL}\" />\r\n        <div class=\"stats\">\r\n          <p class=\"stats-item\"><i class=\"material-icons\">thumb_up</i>${likes}</p>\r\n          <p class=\"stats-item\"><i class=\"material-icons\">visibility</i>${views}</p>\r\n          <p class=\"stats-item\"><i class=\"material-icons\">comment</i>${comments}</p>\r\n          <p class=\"stats-item\"><i class=\"material-icons\">cloud_download</i>${downloads}</p>\r\n        </div>\r\n      </li>`\r\n    )\r\n    .join('');\r\n  gallery.insertAdjacentHTML('beforeend', markup);\r\n}\r\n\r\nfunction scrollToNewImages() {\r\n  const lastImage = gallery.lastElementChild;\r\n  lastImage.scrollIntoView({\r\n    behavior: 'smooth',\r\n    block: 'end',\r\n  });\r\n}\r\n\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}